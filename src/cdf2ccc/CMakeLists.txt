add_library(cdf2ccc STATIC
  # F90DECKS
    udparse.f90
  # FFDECKS
    def_dim_coord.F90
    get_coord2.F90
    get_topo.F90
    inq_file.F90
    rdlatlon2.F90
    vers_cccma.F90
    vers_netcdf.F90
  # FDECKS
    affecte_attr.f
    affecte_coord.f
    affecte_dim.f
    affecte_var.f
    attr_value.f
    attribut_coord.f
    attribut_var.f
    auxiliary_coordinate.f
    cal_date.f
    clean_char.f
    combline.f
    conv_unit.f
    def_attr_projection.f
    def_cccma.f
    def_date.f
    def_level.f
    def_name.f
    def_spectral_truncation.f
    define_list.f
    define_netcdf.f
    define_var.f
    eval_lonlat.f
    eval_xcyc.f
    get_attr.f
    get_attribut.f
    get_coordonne.f
    get_dim.f
    get_name.f
    get_string.f
    get_var.f
    handle_err.f
    hybrid_vertical_coordinate.f
    init_dim.f
    initialise.f
    justifie_droite.f
    les_arg.f
    lire_arg.f
    lire_cccvar.f
    minmaxchar.f
    nblen.f
    possibilite.f
    put_attribut.f
    put_var.f
    rdspec2.f
    scanfile.f
    trier.f
    valide_range.f
    wrfile.f
    wrlalo.f
)
target_include_directories(cdf2ccc PUBLIC ${CMAKE_BINARY_DIR}/src/extras/udunits-f-2.0)
target_include_directories(cdf2ccc PUBLIC ${NETCDF_Fortran_INCLUDE_DIR})
target_link_libraries(cdf2ccc PUBLIC ${NETCDF_Fortran_LIBRARY})
add_dependencies(cdf2ccc f_udunits_2 lssub)

set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,--warn-unresolved-symbols")
add_executable(stable.cdf2ccc cdf2ccc.F90)
target_link_libraries(stable.cdf2ccc PUBLIC cdf2ccc)
# TODO : The executable stable.cdf2rpn seems to be a link to stable.cdf2rpn.
#        so the code must do something based on $0 (argv[0] or whatever it is
#        in Fortran).  Both these executables seem to be meant to be called
#        through wrappers found in ${CMAKE_SOURCE_DIR}/bin: cdf2ccc and cdf2rpn.
#        both scritps look similar and each ends up calling bin/${EC_ARCH}/stable.cdf2{ccc,rpn}


# TODO : Get NetCDF to work.
#        - Find proper ssmuse
#        - Create setup file
#        - Add cmake link and include directives.
# TODO : Doc generated by extracting comments out of cdf2ccc.F90 to form
#        - Put in separate .md or .org file and let orgmanpages handle it.
#
# Analysis of how documentation is created and where I think the files should
# eventually go.
#
# cdf2ccc.txt.
# .F90.txt:
# 	$(FTNT) $< | sed s/'^[!*]'/' '/ > $(MANDIR)/$@ ;\
# 	$(DIAGNOSTIQUE)/bin/command-origin-document.sh $< $(MANDIR)/$@ ;\
# 	if ( test "$(HOSTWEB):$(DIAGWEB)" != ":" ) then \
# 	rsync -av $(MANDIR)/$@ $(HOSTWEB):$(DIAGWEB) ; fi
# 1. Sed removes all leading comment markers
# 2. Result goes through preprocessor with -DNOSOURCE to remove the source code
# 3. command-original-document.sh takes ['cdf2ccc.F90', '$(MANDIR)/cdf2ccc.txt']
#    as arguments
#
# About MANDIR: From Makefile: MANDIR   = $(DIAGS)/man/pdoc
#
# About (2) : since the file is
# ###########################
# <commented documentation>
# #ifndef NOSOURCE
# <the actual source code>
# #endif
# ###########################
# the preprocessor command removes the code.
#
# About (3) : From the top of command-origin-document.sh:
# Used to retrieve the date and comments of the last
# commit in which the source of this r.diag ${Command}
# was modified and inserts them in in the $Header line
# of the source file $Document. Called in the
# .txt recipies of the lspgm Makefile.
#
# Recommendation:
#
# I believe that this documentation should be in its own separate file either in
#     ${CMAKE_SOURCE_DIR}/share/man/man1/cdf2ccc.md
# to be turned into
#     ${CMAKE_SOURCE_DIR}/share/man/man1/cdf2ccc.1
# using pandoc.
#
# Or the file could be in
#     ${CMAKE_CURRENT_SOURCE_DIR}/cdf2ccc.md
# with a relative link
#     ${CMAKE_SOURCE_DIR}/share/man/man1/cdf2ccc.md -> ../../../src/cdf2ccc/cdf2ccc.md
#
#
# Since cdf2ccc depends on the other target of this project udunits, cdf2ccc #
# could not be built standalone and therefore the idea of putting
#
# Or the file could be in
#     ${CMAKE_CURRENT_SOURCE_DIR}/cdf2ccc.md
# with a relative link
#     ${CMAKE_SOURCE_DIR}/share/man/man1/cdf2ccc.md -> ../../../src/cdf2ccc/share/man/man1/cdf2ccc.md
#
# to make it so that cdf2ccc could be built with its manpage standalone is not
# something that is worth spending effort on.

